Date api changes in java 1.8 version
----------------------------------------------------------------------------------

-> In java we have java.util.Date class to work with date related functionality in our application.

		Date date  = new Date();

-> When we create object for Date class it will give both date and time (current date & time).

-> If we want to get only date without time or only time without date then we have to write
 our own logic using Date class object.

-> To overcome this problem, in java 1.8 v changes happend for Date API.

-> In Java 1.8v new classes provided to work with date related functionality

		java.time.LocalDate (It will deal with only date)
		java.time.LocalTime (It will deal with only time)
		java.time.LocalDateTime (It will deal with both date & time)

-> The above classes got introduced in java.time package.
-----------------------------------------------------------------------------------

Example 1:

package com.bikkadIT;

import java.time.LocalDate;
import java.time.Month;
import java.util.Date;

public class LocalDateDemo {

	public static void main(String[] args) {
		
		Date date=new Date();
		System.out.println(date);
		
		System.out.println(LocalDate.now());
		System.out.println(LocalDate.of(2022, 05, 20));
		System.out.println(LocalDate.of(2022, Month.MAY, 20));
		LocalDate date1 = LocalDate.parse("2022-02-26");
		        System.out.println(date1.plusDays(4));
		        System.out.println(date1.plusMonths(4));
		        System.out.println(date1.plusYears(2));
		        
		    boolean before = LocalDate.parse("2010-03-12").isBefore(LocalDate.parse("2018-06-14"));     
		   System.out.println(before);
		   
		      
				    boolean after = LocalDate.parse("2010-03-12").isAfter(LocalDate.parse("2018-06-14"));     
				   System.out.println(after);
		    
		    
	}
}


Example 2:

package com.bikkadIT;

import java.time.LocalDate;
import java.time.Month;
import java.util.Date;

public class LocalDateDemo {

	public static void main(String[] args) {
		
		Date date=new Date();
		System.out.println(date);
		
		System.out.println(LocalDate.now());
		System.out.println(LocalDate.of(2022, 05, 20));
		System.out.println(LocalDate.of(2022, Month.MAY, 20));
		LocalDate date1 = LocalDate.parse("2022-02-26");
		        System.out.println(date1.plusDays(4));
		        System.out.println(date1.plusMonths(4));
		        System.out.println(date1.plusYears(2));
		        
		    boolean before = LocalDate.parse("2010-03-12").isBefore(LocalDate.parse("2018-06-14"));     
		   System.out.println(before);
		   
		      
				    boolean after = LocalDate.parse("2010-03-12").isAfter(LocalDate.parse("2018-06-14"));     
				   System.out.println(after);
		    
		    
	}
}

Example 3:


package com.bikkadIT;

import java.time.LocalDateTime;

public class LocalDateAndTimeDemo {

	
	public static void main(String[] args) {
		
		System.out.println(LocalDateTime.now());
		
		
	}
}


Example 4:


package com.bikkadIT;

import java.time.LocalDateTime;

public class LocalDateAndTimeDemo {

	
	public static void main(String[] args) {
		
		System.out.println(LocalDateTime.now());
		
		
	}
}


Example 5:

package com.bikkadIT;

import java.time.LocalDate;
import java.time.Period;

public class PeriodDemo {

	public static void main(String[] args) {
		
		Period between = Period.between(LocalDate.parse("1992-05-20"), LocalDate.now());
	   System.out.println(between);
	}
}


Example 6:

package com.bikkadIT;

import java.time.Duration;
import java.time.LocalTime;

public class DurationDemo {

	public static void main(String[] args) {
		
		Duration between = Duration.between(LocalTime.parse("12:44"),LocalTime.parse("13:31"));
	   System.out.println(between);
	}
}
